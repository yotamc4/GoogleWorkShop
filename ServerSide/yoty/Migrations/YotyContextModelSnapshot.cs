// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YOTY.Service.Data;

namespace YOTY.Service.Migrations
{
    [DbContext(typeof(YotyContext))]
    partial class YotyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("YOTY.Service.Data.Entities.BuyerAccountDetailsEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("BuyerAccountDetailsEntity");
                });

            modelBuilder.Entity("YOTY.Service.Data.Entities.BuyerEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BuyerAccountDetailsId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FacebookAccountId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BuyerAccountDetailsId");

                    b.HasIndex("FacebookAccountId");

                    b.ToTable("Buyers");
                });

            modelBuilder.Entity("YOTY.Service.Data.Entities.FacebookAccountEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("FacebookAccountEntity");
                });

            modelBuilder.Entity("YOTY.Service.Data.Entities.ParticipancyEntity", b =>
                {
                    b.Property<string>("BidId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BuyerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumOfUnits")
                        .HasColumnType("int");

                    b.HasKey("BidId", "BuyerId");

                    b.HasIndex("BuyerId");

                    b.ToTable("ParticipancyEntity");
                });

            modelBuilder.Entity("YOTY.Service.Data.Entities.BidEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("MaxPrice")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PotenialSuplliersCounter")
                        .HasColumnType("int");

                    b.Property<string>("ProductImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitsCounter")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Bids");
                });

            modelBuilder.Entity("YOTY.Service.Data.Entities.SellerEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<int>("ReviewsCounter")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Sellers");
                });

            modelBuilder.Entity("YOTY.Service.Data.Entities.SellerOfferEntity", b =>
                {
                    b.Property<string>("BidId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SellerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MinimumUnits")
                        .HasColumnType("int");

                    b.Property<string>("OfferDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("OfferedPrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("PublishedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("BidId", "SellerId");

                    b.HasIndex("SellerId");

                    b.ToTable("SellerOfferEntity");
                });

            modelBuilder.Entity("YOTY.Service.Data.Entities.BuyerEntity", b =>
                {
                    b.HasOne("YOTY.Service.Data.Entities.BuyerAccountDetailsEntity", "BuyerAccountDetails")
                        .WithMany()
                        .HasForeignKey("BuyerAccountDetailsId");

                    b.HasOne("YOTY.Service.Data.Entities.FacebookAccountEntity", "FacebookAccount")
                        .WithMany()
                        .HasForeignKey("FacebookAccountId");

                    b.Navigation("BuyerAccountDetails");

                    b.Navigation("FacebookAccount");
                });

            modelBuilder.Entity("YOTY.Service.Data.Entities.ParticipancyEntity", b =>
                {
                    b.HasOne("YOTY.Service.Data.Entities.BidEntity", "Bid")
                        .WithMany("CurrentParticipancies")
                        .HasForeignKey("BidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YOTY.Service.Data.Entities.BuyerEntity", "Buyer")
                        .WithMany("CurrentParticipancies")
                        .HasForeignKey("BuyerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bid");

                    b.Navigation("Buyer");
                });

            modelBuilder.Entity("YOTY.Service.Data.Entities.SellerOfferEntity", b =>
                {
                    b.HasOne("YOTY.Service.Data.Entities.BidEntity", "Bid")
                        .WithMany("CurrentOffers")
                        .HasForeignKey("BidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YOTY.Service.Data.Entities.SellerEntity", "Seller")
                        .WithMany("CurrentOffers")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bid");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("YOTY.Service.Data.Entities.BuyerEntity", b =>
                {
                    b.Navigation("CurrentParticipancies");
                });

            modelBuilder.Entity("YOTY.Service.Data.Entities.BidEntity", b =>
                {
                    b.Navigation("CurrentOffers");

                    b.Navigation("CurrentParticipancies");
                });

            modelBuilder.Entity("YOTY.Service.Data.Entities.SellerEntity", b =>
                {
                    b.Navigation("CurrentOffers");
                });
#pragma warning restore 612, 618
        }
    }
}
